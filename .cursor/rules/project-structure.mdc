# DApp Boilerplate Project Structure

This is a full-stack decentralized application (DApp) boilerplate with a voting system implementation. The project follows a monorepo structure with separate backend (blockchain) and frontend (web application) directories.

## Project Overview

The main entry point is [README.md](mdc:README.md) which contains setup instructions for both backend and frontend.

## Backend (Blockchain) Structure

The backend is located in the [backend/](mdc:backend/) directory and contains:

- **Smart Contracts**: [backend/contracts/Ballot.sol](mdc:backend/contracts/Ballot.sol) - Main voting contract implementing delegation and voting functionality
- **Configuration**: [backend/hardhat.config.ts](mdc:backend/hardhat.config.ts) - Hardhat configuration for development and deployment
- **Foundry Configuration**: [backend/foundry.toml](mdc:backend/foundry.toml) - Foundry configuration for testing and deployment
- **Package Management**: [backend/package.json](mdc:backend/package.json) - Dependencies and scripts for blockchain development
- **Tests**:
  - [backend/test/foundry/](mdc:backend/test/foundry/) - Foundry-based Solidity tests
  - [backend/test/hardhat/](mdc:backend/test/hardhat/) - Hardhat-based TypeScript tests
- **Deployments**: [backend/ignition/modules/](mdc:backend/ignition/modules/) - Hardhat Ignition deployment scripts

## Frontend (Web Application) Structure

The frontend is located in the [frontend/](mdc:frontend/) directory and contains:

- **Next.js App**: [frontend/src/app/](mdc:frontend/src/app/) - Next.js 14 app router pages
- **Components**:
  - [frontend/src/components/shared/](mdc:frontend/src/components/shared/) - DApp-specific components
  - [frontend/src/components/ui/](mdc:frontend/src/components/ui/) - Reusable UI components (shadcn/ui)
- **Web3 Integration**:
  - [frontend/src/contexts/web3-provider.tsx](mdc:frontend/src/contexts/web3-provider.tsx) - Wagmi and ConnectKit providers
  - [frontend/src/lib/wagmi.config.ts](mdc:frontend/src/lib/wagmi.config.ts) - Wagmi configuration for blockchain connections
  - [frontend/src/contracts/ballot.contract.ts](mdc:frontend/src/contracts/ballot.contract.ts) - Contract ABI and configuration
- **Hooks**: [frontend/src/hooks/](mdc:frontend/src/hooks/) - Custom React hooks for blockchain interactions
- **Package Management**: [frontend/package.json](mdc:frontend/package.json) - Dependencies and scripts for web development

## Key Technologies

- **Blockchain**: Solidity, Hardhat, Foundry, Ethers.js
- **Frontend**: Next.js 14, React 18, TypeScript, Tailwind CSS
- **Web3**: Wagmi, ConnectKit, Viem
- **UI**: Radix UI, shadcn/ui components
- **Package Manager**: pnpm with workspace configuration
  description:
  globs:
  alwaysApply: false

---
